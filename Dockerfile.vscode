# 베이스 이미지로 python:3.12-slim 사용
FROM python:3.12-slim

# 환경 변수 설정 (non-interactive 모드)
ENV DEBIAN_FRONTEND=noninteractive

# 필요한 패키지 설치 (예시로 curl과 code-server)
RUN apt-get update && apt-get install -y \
    docker.io \
    openjdk-17-jdk \
    vim \
    gcc \
    g++ \
    build-essential \
    ghostscript \
    curl \
    libmecab-dev \
    mecab \
    mecab-ipadic-utf8 \
    zsh \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Oh My Zsh
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" \
    && chsh -s $(which zsh) \
    && git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions \
    && git clone https://github.com/zsh-users/zsh-syntax-highlighting ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

ENV JAVA_HOME /usr/lib/jvm/java-17-openjdk-amd64
ENV PATH $JAVA_HOME/bin:$PATH
    
# code-server 설치
RUN curl -fsSL https://code-server.dev/install.sh | sh

# 파이썬 패키지 설치를 위한 pip 업그레이드
RUN pip install --upgrade pip

# FastAPI와 Uvicorn JupyterLab 설치
RUN pip install fastapi uvicorn jupyterlab


# 필요한 Python 라이브러리 목록을 미리 준비한 requirements.txt로 설치
COPY requirements.txt /requirements.txt

WORKDIR /workspace

# requirements.txt에 나열된 패키지 설치
RUN pip install -r /requirements.txt

RUN python -m spacy download en_core_web_sm
RUN python -m spacy download ko_core_news_sm
# 포트 설정
EXPOSE 8080


RUN useradd -m coder 
USER coder

COPY vscode-extensions.txt /tmp/vscode-extensions.txt

# Install the extensions
RUN cat /tmp/vscode-extensions.txt | while read extension; do \
    code-server --install-extension $extension || echo "Failed to install $extension"; \
    done
# Copy configuration for code-server
COPY --chown=coder:coder ./config.yaml /home/coder/.config/code-server/config.yaml
# VSCode 시작 명령

CMD ["sh", "-c", "code-server --bind-addr 0.0.0.0:8080 --auth none"]
